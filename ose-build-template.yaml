---
kind: Template
apiVersion: v1
metadata:
  name: automated-build
  creationTimestamp:
  annotations:
    description: |
      An OpenShift v3 template that sets up an automated build pipeline
      to build, test and promote docker images from a Dockerfile.
    provider: aweiteka@redhat.com
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${BUILD_IMAGE_NAME}"
    creationTimestamp:
  spec:
    tags:
    - name: "${BUILD_IMAGE_TAG}"
      from:
        Kind: ImageStreamTag
        Name: "${BUILD_IMAGE_TAG}"
  status:
    dockerImageRepository: ''
#- kind: ImageStream
#  apiVersion: v1
#  metadata:
#    annotations:
#      openshift.io/image.dockerRepositoryCheck: 2015-08-24T14:21:58Z
#    creationTimestamp: null
#    name: "${BASE_DOCKER_IMAGE}"
#  spec:
#    dockerImageRepository: "${BASE_DOCKER_IMAGE}"
#  status:
#    dockerImageRepository: ""
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    creationTimestamp:
    labels:
      name: "${NAME}"
  spec:
    triggers:
    - type: generic
      generic:
        secret: "${GENERIC_SECRET}"
    source:
      type: Git
      git:
        uri: "${SOURCE_URI}"
        ref: "${BUILD_REF}"
      contextDir: "${BUILD_CONTEXT_DIR}"
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: "${BASE_DOCKER_IMAGE}:${BASE_DOCKER_IMAGE_TAG}"
    output:
      to:
        kind: ImageStreamTag
        name: "${BUILD_IMAGE_NAME}:${BUILD_IMAGE_TAG}"
    resources: {}
  status:
    lastVersion: 0
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-${BUILD_IMAGE_TAG}"
  spec:
    template:
      metadata:
        labels:
          name: "${NAME}-${BUILD_IMAGE_TAG}"
      spec:
        containers:
        - name: "${NAME}"
          image: "${BUILD_IMAGE_NAME}"
          volumeMounts:
          - name: "${NAME}-scan"
            mountPath: "/"
        volumes:
        - name: "${NAME}-scan"
          persistentVolumeClaim:
            claimName: ${NAME}
    replicas: 1
    selector:
      name: "${NAME}-${BUILD_IMAGE_TAG}"
    triggers:
    - type: imageChange
      imageChangeParams:
        automatic: true
        from:
          kind: ImageStreamTag
          name: "${BUILD_IMAGE_NAME}:${BUILD_IMAGE_TAG}"
    - type: generic
      generic:
        secret: "${GENERIC_SECRET}"
    strategy:
      type: Recreate
      recreateParams:
- kind: "Service"
  apiVersion: "v1"
  metadata:
    name: "${NAME}-${BUILD_IMAGE_TAG}"
    creationTimestamp: null
  spec:
    ports:
    - name: "test"
      protocol: "TCP"
      port: 8000
      targetPort: 80
      nodePort: 0
    selector:
      name: "${NAME}-${BUILD_IMAGE_TAG}"
    portalIP: ""
    type: "ClusterIP"
    sessionAffinity: "None"
  status:
    loadBalancer: {}
- kind: "PersistentVolumeClaim"
  apiVersion: "v1"
  metadata:
    name: "${NAME}"
    creationTimestamp: null
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- kind: "Service"
  apiVersion: "v1"
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    creationTimestamp: null
  spec:
    ports:
    - name: "web"
      protocol: "TCP"
      port: 8080
      targetPort: 8080
      nodePort: 0
    selector:
      name: "${JENKINS_SERVICE_NAME}"
    portalIP: ""
    type: "ClusterIP"
    sessionAffinity: "None"
  status:
    loadBalancer: {}
- kind: "Route"
  apiVersion: "v1"
  metadata:
    name: "jenkins"
    creationTimestamp: null
  spec:
    to:
      kind: "Service"
      name: "${JENKINS_SERVICE_NAME}"
- kind: "DeploymentConfig"
  apiVersion: "v1"
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    creationTimestamp: null
  spec:
    strategy:
      type: "Recreate"
      resources: {}
    triggers:
    - type: "ConfigChange"
    replicas: 1
    selector:
      name: "${JENKINS_SERVICE_NAME}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: "${JENKINS_SERVICE_NAME}"
      spec:
        containers:
        - name: "jenkins"
          image: "${JENKINS_IMAGE}"
          env:
          - name: "JENKINS_PASSWORD"
            value: "${JENKINS_PASSWORD}"
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: "IfNotPresent"
          capabilities: {}
          securityContext:
          capabilities: {}
          privileged: false
        restartPolicy: "Always"
        dnsPolicy: "ClusterFirst"
      status: {}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: image-scanner
  spec:
    template:
      metadata:
        labels:
          name: image-scanner
      spec:
        containers:
        - name: image-scanner
          image: "${SCANNER_IMAGE}"
          volumeMounts:
          - name: scan-container-contents
            mountPath: /container-contents
        volumes:
        - name: scan-container-contents
          persistentVolumeClaim:
            claimName: ${NAME}
    replicas: 1
    selector:
      name: image-scanner
#- kind: Service
#  apiVersion: v1
#  metadata:
#    name: image-scanner
#    creationTimestamp: null
#  spec:
#    ports:
#    - name: image-scanner
#      protocol: TCP
#      port: 8080
#      targetPort: 8080
#    selector:
#      name: image-scanner
#    portalIP: ""
#    type: ClusterIP
#    sessionAffinity: None
#  status:
#    loadBalancer: {}

parameters:
- name: NAME
  description: |
    Image workflow name. This will be used to identify the resources.
- name: SOURCE_URI
  description: Git source URI of Dockerfile repository
- name: BUILD_CONTEXT_DIR
  description: Optional relative path to Dockerfile in source repository.
  default:
- name: BUILD_REF
  description: Optional git branch or tag
  default: master
- name: BASE_DOCKER_IMAGE
  description: Base docker image from the Dockerfile FROM line.
- name: BASE_DOCKER_IMAGE_TAG
  description: Base docker image tag from the Dockerfile FROM line.
  value: latest
- name: BUILD_IMAGE_NAME
  description: The name of the image after it is built, not including :<tag>
- name: BUILD_IMAGE_TAG
  description: The tag of the image after it is built
  value: test
- name: JENKINS_IMAGE
  description: Jenkins master docker image
  value: aweiteka/ose-jenkins-master
- name: JENKINS_PASSWORD
  description: Password for the Jenkins user
  generate: expression
  value: password
- name: JENKINS_SERVICE_NAME
  description: Jenkins service name
  value: jenkins
- name: IMAGE_SCAN_JOB_NAME
  description: Jenkins image scan job name
  value: image-scan
- name: SCANNER_IMAGE
  description: Image scanner docker image
  value: aweiteka/image-scanner
- name: GIT_SECRET
  description: Git repo callback token
  generate: expression
  from: "[a-zA-Z0-9]{12}"
- name: GENERIC_SECRET
  description: Generic callback token
  generate: expression
  from: "[a-zA-Z0-9]{12}"
labels:
  template: automated-build

